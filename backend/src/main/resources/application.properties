# JWT Configuration
# IMPORTANT: Use a strong, randomly generated secret in a real application!
# This is just an example. You can generate one using a tool or library.
# For example, in Python: import secrets; secrets.token_hex(32)
app.jwtSecret================================BezKoder=SuperSecretKey=====================================
app.jwtExpirationMs=86400000 # 24 hours

# H2 Database Configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:mem:activos_tic_db;DB_CLOSE_DELAY=-1;NON_KEYWORDS=USER,ROLE # Added NON_KEYWORDS for H2 compatibility with entity names
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true # Optional: to format the SQL logs
